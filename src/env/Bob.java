package env;

import cryptosystem.CryptoSystem;
import env.Question;

import java.math.BigInteger;
import java.util.LinkedList;
import java.util.Random;

public abstract class Bob extends Thread {
    //512 bits keys
    protected static CryptoSystem.Keys myKeys = new CryptoSystem.Keys(
        new BigInteger("105592678282549073866124653400919551893397082528952515018052268994510731576183067599910254230904300748219511813642115308059813580443727087080777211516521792173157419110874851380210565312640819741912869856790974320954162071843523853072018988953904686527048296688753895555343375503513524691867690218009558437601"),
        new BigInteger("105592678282549073866124653400919551893397082528952515018052268994510731576183067599910254230904300748219511813642115308059813580443727087080777211516521771615806662731885180234896706995516898382506391962872847118927036808852145355530958873179354896238842811529855593733982675835285636583110326983497563269312")
    );
    public static BigInteger getPublicKey() {
        return myKeys.pk;
    }

    protected CryptoSystem cs;

    public Bob(CryptoSystem cs) {
        this.cs = cs;
    }

    @Override
    public abstract void run();
}
